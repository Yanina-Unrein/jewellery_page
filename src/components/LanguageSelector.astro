---
import { languages, defaultLang, getLocalizedAnchor, getLocalizedURL } from '../i18n/ui';
import { anchors } from '../i18n/anchors';

const { currentLang } = Astro.props;
const currentUrl = Astro.url;

function getLanguageUrl(targetLang: string) {
  return getLocalizedURL(
    currentUrl.pathname,
    targetLang,
    currentUrl.hash
  );
}
---

<div class="language-selector">
  <a 
    href={getLanguageUrl(currentLang === 'es' ? 'en' : 'es')} 
    class="lang-link"
  >
    <img class="language-icon" src="/icons/language.svg" alt="Language Icon" />
    {currentLang === 'es' ? 'EN' : 'ES'}  
  </a>
</div>

<script is:inline>
  // Manejar el cambio de idioma sin recarga completa
  document.querySelector('[data-lang-switch]')?.addEventListener('click', (e) => {
    e.preventDefault();
    const targetLang = e.currentTarget.getAttribute('data-target-lang');
    const currentPath = window.location.pathname;
    const currentHash = window.location.hash;
    
    // Versión corregida:
    const cleanPath = currentPath.replace(new RegExp(`^/(${['es','en'].join('|')})`), '');
    const newPath = targetLang === 'es' ? cleanPath : `/${targetLang}${cleanPath}`;
    const newUrl = `${newPath}${currentHash}`;
    
    // Manejo especial para página 404
    if (currentPath.includes('404')) {
      const langPrefix = targetLang === 'es' ? '' : `/${targetLang}`;
      window.location.href = `${langPrefix}/404${currentHash}`;
      return;
    }
    
    // Guardar el idioma en localStorage
    localStorage.setItem('preferredLang', targetLang);
    
    // Actualizar la URL y recargar solo los necesarios
    if (import.meta.env.PROD) {
      window.location.href = newUrl;
    } else {
      // En desarrollo, usa replaceState para mejor experiencia
      window.history.replaceState({}, '', newUrl);
      window.location.reload();
    }
  });
</script>

<style>
  .lang-link {
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
    text-decoration: none;
    transition: all 0.3s ease;
    color: #664a38;
    cursor: pointer;
  }

  .lang-link:hover{
    color: var(--walnut);
  }

  .language-icon {
    width: 40px;
    height: auto;
    margin-right: 0.5rem;
  }
</style>